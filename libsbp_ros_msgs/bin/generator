#! /usr/bin/env python

# Motivated by https://github.com/swift-nav/libsbp/blob/master/generator/sbpg/generator.py

import libsbp_ros_msgs.ros_renderer as renderer
import sbpg.specs.yaml2 as yaml
import os
import rospkg
import argparse
import pprint

def createDirectory(dir):
    dir = os.path.abspath(r.get_path('libsbp_ros_msgs') + dir)
    try:
        os.makedirs(dir)
    except OSError:
        if not os.path.isdir(dir):
            raise
    return dir

def getArgs():
    parser = argparse.ArgumentParser(description='ROS SBP message generator.')
    parser.add_argument('-v',
                        '--verbose',
                        action="store_true",
                        help='Print debugging info.')
    return parser

if __name__ == '__main__':
    print "hello world."
    # Parse input arguments.
    args = getArgs().parse_args()

    # Get the SBP specs.
    r = rospkg.RosPack()
    input_dir = os.path.abspath(r.get_path('libsbp_catkin') + '/../../build/libsbp_catkin/libsbp-prefix/src/libsbp/spec/yaml/swiftnav/sbp/')
    file_index = yaml.resolve_deps(*yaml.get_files(input_dir))

    # Output directories.
    msg_dir = createDirectory('/msg')
    include_dir = createDirectory('/include/libsbp_ros_msgs')
    src_dir = createDirectory('/src')
    export_cb_dir = createDirectory('/export')

    if args.verbose:
        print("Reading files...")
        pprint.pprint(list(file_index.keys()))
        print("Writing to...\n%s\n%s\n%s\n%s" % (include_dir, src_dir, msg_dir, export_cb_dir))

    # Parse specs.
    file_index_items = sorted(file_index.items(), key=lambda f: f[0])
    all_specs = []
    for fname, spec in file_index_items:
        parsed = yaml.parse_spec(spec)
        all_specs.append(parsed)

    # Render.
    renderer.render_msgs(msg_dir, all_specs, args.verbose)
    renderer.render_conversion_header(include_dir, all_specs, args.verbose)
    renderer.render_conversion_src(src_dir, all_specs, args.verbose)
    renderer.render_cb_export(export_cb_dir, all_specs, args.verbose)
